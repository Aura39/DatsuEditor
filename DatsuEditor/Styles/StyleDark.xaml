<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:n="clr-namespace:DatsuEditor.Nodes"
                    xmlns:c="clr-namespace:DatsuEditor.Controls.Common">

    <SolidColorBrush Color="#FFFFFF" x:Key="ForegroundActive"/>
    <SolidColorBrush Color="#888888" x:Key="ForegroundDisabled"/>
    <SolidColorBrush Color="#666666" x:Key="BackgroundActive"/>
    <SolidColorBrush Color="#444444" x:Key="BackgroundHover"/>
    <SolidColorBrush Color="#333333" x:Key="Background"/>
    <SolidColorBrush Color="#212121" x:Key="BackgroundDeep"/>

    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{StaticResource Background}"/>
    </Style>

    <Style TargetType="{x:Type StatusBar}">
        <Setter Property="Background" Value="{StaticResource Background}"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundActive}"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="Grayscale"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TipText">
        <Setter Property="TextOptions.TextRenderingMode" Value="Grayscale"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="Background" Value="{StaticResource BackgroundDeep}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundDisabled}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Margin" Value="4,0,0,0"/>
    </Style>

    <Style x:Key="ExpandCollapseStyle"
          TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width"  Value="17" />
        <Setter Property="Height" Value="17" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Width="9"
                           Height="9"
                           Background="Transparent">
                        <Grid>
                            <Border Background="{StaticResource BackgroundHover}"
                                    BorderBrush="{StaticResource BackgroundActive}"
                                    BorderThickness="1"
                                    SnapsToDevicePixels="True"
                                    RenderOptions.EdgeMode="Aliased"/>

                            <Line Stroke="{StaticResource ForegroundActive}"
                                     x:Name="ExpandImg"
                                     StrokeThickness="1"
                                     X1="5"
                                     Y1="2"
                                     X2="5"
                                     Y2="7"
                                     SnapsToDevicePixels="True"
                                     RenderOptions.EdgeMode="Aliased"/>
                            <Line Stroke="{StaticResource ForegroundActive}"
                                     StrokeThickness="1"
                                     X1="2"
                                     Y1="5"
                                     X2="7"
                                     Y2="5" 
                                     SnapsToDevicePixels="True"
                                     RenderOptions.EdgeMode="Aliased"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                Value="True">
                            <Setter Property="Visibility"
                                   TargetName="ExpandImg"
                                   Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FileNodeStyle" TargetType="{x:Type n:FileNode}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundActive}"/>
        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid x:Name="Root">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="10"
                                              Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ToggleButton
                            x:Name="ExpandCollapseButton"
                            Grid.Column="0"
                            IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ExpandCollapseStyle}"
                            VerticalAlignment="Center"
                            />
                        <Image RenderOptions.BitmapScalingMode="Linear" 
                               Margin="2" 
                               Source="{Binding NodeIcon, RelativeSource={RelativeSource TemplatedParent}}" 
                               Grid.Column="1" 
                               IsHitTestVisible="True"/>
                        <Border x:Name="BG" Grid.Column="2" Grid.ColumnSpan="2" Padding="2,0,0,0">
                            <ContentPresenter ContentSource="Header"
                                              x:Name="PART_Header"
                                              TextOptions.TextRenderingMode="Grayscale"
                                              TextOptions.TextFormattingMode="Display"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Stretch"
                                              IsHitTestVisible="True"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="ExpandCollapseButton" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="BG" Property="Background" Value="{StaticResource BackgroundActive}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TreeNodeStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundActive}"/>
        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid x:Name="Root">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="10"
                                          Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ToggleButton
                        x:Name="ExpandCollapseButton"
                        Grid.Column="0"
                        IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                        Style="{StaticResource ExpandCollapseStyle}"
                        VerticalAlignment="Center"
                        />
                        <Border x:Name="BG" Grid.Column="2" Grid.ColumnSpan="2" Padding="2,0,0,0">
                            <ContentPresenter ContentSource="Header"
                                          x:Name="PART_Header"
                                          TextOptions.TextRenderingMode="Grayscale"
                                          TextOptions.TextFormattingMode="Display"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Stretch"
                                          IsHitTestVisible="True"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="ExpandCollapseButton" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="BG" Property="Background" Value="{StaticResource BackgroundActive}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{StaticResource Background}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundActive}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Background="{StaticResource Background}" 
                            BorderBrush="{StaticResource BackgroundActive}" 
                            BorderThickness="0 0 0 1"
                            Width="Auto">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type c:PropertyEditor}">
        <Setter Property="Background" Value="{StaticResource Background}"/>
    </Style>

    <ControlTemplate TargetType="{x:Type MenuItem}" x:Key="MenuItemT">
        <Grid Name="Root" Margin="0,0" Background="{StaticResource Background}">
            <ContentPresenter   ContentSource="Header"
                                TextOptions.TextRenderingMode="Grayscale"
                                TextOptions.TextFormattingMode="Display"
                                TextBlock.FontSize="12"
                                TextBlock.Foreground="{StaticResource ForegroundActive}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"
                                Margin="20,5"/>
            <Popup IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                   PopupAnimation="None" 
                   HorizontalAlignment="Left">
                <StackPanel IsItemsHost="True" 
                            ClipToBounds="True" 
                            Background="{StaticResource Background}"
                            HorizontalAlignment="Stretch"/>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Root" Property="Background" Value="{StaticResource BackgroundHover}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Root" Property="Background" Value="{StaticResource BackgroundActive}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="{StaticResource Background}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundActive}"/>
    </Style>
    
    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundActive}"/>
        <Setter Property="Template" Value="{DynamicResource MenuItemT}"/>
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="{StaticResource BackgroundHover}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border Background="{StaticResource BackgroundHover}"
                            Height="1"
                            Margin="8,4"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundActive}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border Name="Root" 
                            Margin="0,2,10,0" 
                            Background="{StaticResource Background}"
                            HorizontalAlignment="Stretch"
                            BorderBrush="{StaticResource BackgroundHover}"
                            BorderThickness="1">
                        <StackPanel
                            IsItemsHost="True"
                            KeyboardNavigation.DirectionalNavigation="Cycle"
                            HorizontalAlignment="Stretch"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>